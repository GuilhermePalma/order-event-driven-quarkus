version: "3"

services:

  # Postgree Configuration
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "0biy0]Q99y2?"
      POSTGRES_USER: "guilherme_user"
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  # Database UI
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: guilherme_user@localhost.com
      PGADMIN_DEFAULT_PASSWORD: "0biy0]Q99y2?"
    ports:
      - 8080:80
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin

  # Necessary to use Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka Configuration
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes

  # Kafka UI Visualizer
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  # Spring Boot Project
  web-order-spring-boot:
    build:
      context: /order-spring-boot
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka

# Kafka Network (Commun on Zookepper, Kafka, Kafdrop)
networks:
  broker-kafka:
    driver: bridge
